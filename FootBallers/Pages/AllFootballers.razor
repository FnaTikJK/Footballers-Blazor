@page "/all"
@using Microsoft.AspNetCore.SignalR.Client;

<PageTitle>Список футболистов</PageTitle>

<h1>Список футболистов</h1>

<div>
    @if (Error.Is)
    {
        <div>Ошибка @Error.Message</div>
    }
    @if (footballers == null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <table class="table">
            <thead>
            <tr class="row">
                <th class="col">ИД</th>
                <th class="col">Имя</th>
                <th class="col">Фамилия</th>
                <th class="col">Пол</th>
                <th class="col">Дата рождения</th>
                <th class="col">Команда</th>
                <th class="col">Страна</th>
                <th class="col"></th>
            </tr>
            </thead>
            <tbody>
            @foreach (var footballer in footballers)
            {
                <tr class="row">
                    <td class="col">@footballer.Id</td>
                    @if (footballer.IsChangeable)
                    {
                        <input class="col" @bind="@footballer.Name"/>
                        <input class="col" @bind="@footballer.Surname"/>
                        <select class="col" @bind="footballer.Sex">
                            @if (sexes != null)
                            {
                                @foreach (var sex in sexes)
                                {
                                    <option value="@sex">@sex</option>
                                }
                            }
                        </select>
                        <input class="col" @bind="@footballer.Birthday"/>
                        <datalist id="suggestions">
                            @if (teams != null)
                            {
                                @foreach (var team in teams)
                                {
                                    <option value="@team">@team</option>
                                }
                            }
                        </datalist>
                        <input class="col" @bind="footballer.Team" autoComplete="on" list="suggestions"/>
                        <select class="col" @bind="footballer.Country">
                            @if (countries != null)
                            {
                                @foreach (var country in countries)
                                {
                                    <option value="@country">@country</option>
                                }
                            }
                        </select>
                    }
                    else
                    {
                        <td class="col">@footballer.Name</td>
                        <td class="col">@footballer.Surname</td>
                        <td class="col">@footballer.Sex</td>
                        <td class="col">@footballer.Birthday</td>
                        <td class="col">@footballer.Team</td>
                        <td class="col">@footballer.Country</td>
                    }
                    <td class="col">
                        @if (!footballer.IsChangeable)
                        {
                            <button @onclick="() => footballer.IsChangeable = !footballer.IsChangeable">
                                Редактировать
                            </button>
                        }
                        else
                        {
                            <button @onclick="async () => await PutFootballerAsync(footballer)">
                                Ок
                            </button>
                        }
                    </td>
                </tr>
            }
            </tbody>
        </table>
    }
</div>

@inject IFootballersService service;
@code {
    private (bool Is, string Message) Error = (false, "");
    private List<FootballerDto> footballers;
    private List<string> countries;
    private List<string> teams;
    private List<string> sexes;
    private HubConnection hubConnection;

    protected override async Task OnInitializedAsync()
    {
        UpdateFootballers(await service.GetAllAsync());
        countries = new List<string>{""}.Concat(await service.GetCountryNames()).ToList();
        teams = new List<string>{""}.Concat(await service.GetTeamNames()).ToList();
        sexes = new List<string>{""}.Concat(await service.GetSexNames()).ToList();

        hubConnection = new HubConnectionBuilder()
            .WithUrl("https://localhost:7277/chat")
            .WithAutomaticReconnect()
            .Build();

        hubConnection.On<List<FootballerDto>>("UpdateList", UpdateFootballers);
        await hubConnection.StartAsync();
    }

    private void UpdateFootballers(List<FootballerDto> footballers)
    {
        this.footballers = footballers;
    }

    private async Task PutFootballerAsync(FootballerDto footballer)
    {
        if (!FootballerDto.isValid(footballer, out var error))
        {
            Error = (true, error);
            return;
        }

        Error = (false, "");
        footballer.IsChangeable = !footballer.IsChangeable;
        await service.PutAsync(footballer);
        await hubConnection.SendAsync("UpdateList", footballers);
    }
}
