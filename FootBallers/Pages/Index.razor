@page "/"

<PageTitle>Добавить футболиста</PageTitle>

<h1>Добавить футболиста</h1>

<div>
    <div>Имя</div>
    <input @bind="footballerDto.Name"/>
    <div>Фамилия</div>
    <input @bind="footballerDto.Surname"/>
    <div>Пол</div>
    <select @bind="footballerDto.Sex">
        @if (sexes != null)
        {
            @foreach (var sex in sexes)
            {
                <option value="@sex">@sex</option>
            }
        }
    </select>
    <div>Дата рождения</div>
    <input @bind="footballerDto.Birthday"/>
    <div>Команда</div>
    <datalist id="suggestions">
        @if (teams != null)
        {
            @foreach (var team in teams)
            {
                <option value="@team">@team</option>
            }
        }
    </datalist>
    <input @bind="footballerDto.Team" autoComplete="on" list="suggestions" />
    <div>Страна</div>
    <select @bind="footballerDto.Country">
        @if (countries != null)
        {
            @foreach (var country in countries)
            {
                <option value="@country">@country</option>
            }
        }
    </select>
</div>

<button @onclick="Add">Добавить</button>

@inject IFootballersService service;
@code{
    private FootballerDto footballerDto = new FootballerDto();
    private List<string> countries;
    private List<string> teams;
    private List<string> sexes;

    protected override async Task OnInitializedAsync()
    {
        countries = new List<string>{""}.Concat(await service.GetCountryNames()).ToList();
        teams = new List<string>{""}.Concat(await service.GetTeamNames()).ToList();
        sexes = new List<string>{""}.Concat(await service.GetSexNames()).ToList();
    }

    private async Task Add()
    {
        await service.AddAsync(footballerDto);
    }
}
